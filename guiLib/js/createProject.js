// Generated by CoffeeScript 1.7.1
var fs, gui, path, scaffoldingDir, whenChoose, win, wrench;

path = require('path');

fs = require('fs');

gui = require('nw.gui');

win = gui.Window.get();

win.focus();

wrench = require('wrench');

scaffoldingDir = path.join(path.dirname(process.execPath), 'scaffolding');

Remix.create({
  remixEvent: {
    'click, close': 'close',
    'click, chooseBasic': 'chooseBasic',
    'click, chooseWebpack': 'chooseWebpack'
  },
  chooseBasic: function() {
    if (!this.projectPath) {
      alert('找不到项目目录');
      return;
    }
    return whenChoose('basic', this.projectPath);
  },
  chooseWebpack: function() {
    return this.chooseBasic();
  },
  close: function() {
    return top.frameWindow.get().destroy();
  },
  render: function() {
    this.projectPath = top.getCreatingProjectPath();
    return this.refs.currentPath.text(this.projectPath);
  }
}).bindNode(document.getElementById('container'));

whenChoose = function(type, destPath) {
  var authorInfo, dialog;
  authorInfo = $.extend({}, store('author'));
  return dialog = Dialog({
    title: "确认项目信息",
    content: Remix.create({
      remixEvent: {
        'submit': 'onSubmit'
      },
      template: "<form class=\"form-horizontal\" role=\"form\">\n  <div class=\"form-group\">\n    <label for=\"project_name\" class=\"col-sm-2 control-label\">项目名称</label>\n    <div class=\"col-sm-10\">\n      <input type=\"text\" class=\"form-control\" id=\"project_name\" placeholder=\"英文ID，无空格\" ref=\"projectName\" name=\"name\">\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"project_description\" class=\"col-sm-2 control-label\">项目简介</label>\n    <div class=\"col-sm-10\">\n      <input type=\"text\" class=\"form-control\" id=\"project_description\" name=\"description\">\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"project_version\" class=\"col-sm-2 control-label\">版本号</label>\n    <div class=\"col-sm-10\">\n      <input type=\"text\" class=\"form-control\" id=\"project_version\" value=\"0.1.0\" name=\"version\">\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"project_homepage\" class=\"col-sm-2 control-label\">项目主页</label>\n    <div class=\"col-sm-10\">\n      <input type=\"url\" class=\"form-control\" id=\"project_homepage\" name=\"homepage\">\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"author_name\" class=\"col-sm-2 control-label\">作者Name</label>\n    <div class=\"col-sm-10\">\n      <input type=\"text\" class=\"form-control\" id=\"author_name\" placeholder=\"英文ID，无空格\" ref=\"name\" name=\"author\">\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"author_email\" class=\"col-sm-2 control-label\">Email</label>\n    <div class=\"col-sm-10\">\n      <input type=\"email\" class=\"form-control\" id=\"author_email\" placeholder=\"邮件地址\" ref=\"email\" name=\"email\">\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"author_url\" class=\"col-sm-2 control-label\">Url</label>\n    <div class=\"col-sm-10\">\n      <input type=\"url\" class=\"form-control\" id=\"author_url\" placeholder=\"作者主页\" ref=\"url\" name=\"url\">\n    </div>\n  </div>\n  \n  <div class=\"form-group\">\n    <div class=\"col-sm-offset-2 col-sm-10\">\n      <p><strong>注：当前目录下的文件将被清空</strong></p>\n      <button type=\"submit\" class=\"btn btn-default\">保存</button>\n    </div>\n  </div>\n</form>",
      infoKeys: ['name', 'email', 'url'],
      onSubmit: function(e) {
        var error, pkgInfo, scaffoldingProjPath;
        e.preventDefault();
        scaffoldingProjPath = path.join(scaffoldingDir, type);
        try {
          wrench.copyDirSyncRecursive(scaffoldingProjPath, destPath, {
            forceDelete: true,
            preserveFiles: true
          });
          pkgInfo = {};
          this.node.serializeArray().forEach(function(nameVal) {
            return pkgInfo[nameVal.name] = nameVal.value;
          });
          fs.writeFileSync(path.join(destPath, 'package.json'), JSON.stringify(pkgInfo, null, 4));
          top.loadProject(destPath);
          return top.frameWindow.get().destroy();
        } catch (_error) {
          error = _error;
          return Dialog({
            title: '创建项目脚手架失败，可能是目录不为空并且已被打开',
            content: error
          });
        }
      },
      render: function() {
        var inputName, _i, _len, _ref, _results;
        _ref = this.infoKeys;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          inputName = _ref[_i];
          if (authorInfo[inputName]) {
            _results.push(this.refs[inputName].val(authorInfo[inputName]));
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      }
    })
  });
};
